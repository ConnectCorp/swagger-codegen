{{#models}}{{#model}}//
// {{classname}}.swift
//
// Generated by swagger-codegen
// https://github.com/ConnectCorp/swagger-codegen
//

import Foundation

{{#description}}

/** {{description}} */{{/description}}
public class {{classname}}: JsonSerializable, CustomStringConvertible {
{{#vars}}{{#isEnum}}
    public enum {{datatypeWithEnum}}: String { {{#allowableValues}}{{#values}}
        case {{enum}} = "{{raw}}"{{/values}}{{/allowableValues}}
    }
    {{/isEnum}}{{/vars}}
    {{#vars}}{{#isEnum}}{{#description}}/** {{description}} */
    {{/description}}public var {{name}}: {{{datatypeWithEnum}}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{#required}}!{{/required}}{{/unwrapRequired}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}{{/isEnum}}{{^isEnum}}{{#description}}/** {{description}} */
    {{/description}}public var {{name}}: {{{datatype}}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{#required}}!{{/required}}{{/unwrapRequired}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}{{/isEnum}}
    {{/vars}}
    public var description: String {
        return "{{classname}}({{#vars}}{{name}}: \({{name}}){{#hasMore}}, {{/hasMore}}{{^hasMore}}){{/hasMore}}{{/vars}}"
    }

    init({{#vars}}{{name}}: {{datatype}}? = {{#defaultValue}}{{defaultValue}}{{/defaultValue}}{{^defaultValue}}nil{{/defaultValue}}{{#hasMore}}, {{/hasMore}}{{^hasMore}}){{/hasMore}}{{/vars}} {
        {{#vars}}self.{{name}} = {{name}}{{#hasMore}}
        {{/hasMore}}{{/vars}}
    }

    func toJson() -> AnyObject {
        var dict = [String:AnyObject?](){{#vars}}{{#isNotContainer}}{{#isPrimitiveType}}{{^isEnum}}
        dict["{{name}}"] = self.{{name}}{{/isEnum}}{{/isPrimitiveType}}{{#isEnum}}
        dict["{{name}}"] = self.{{name}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{/unwrapRequired}}.rawValue{{/isEnum}}{{^isPrimitiveType}}
        dict["{{name}}"] = self.{{name}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{/unwrapRequired}}.toJson(){{/isPrimitiveType}}{{/isNotContainer}}{{#isContainer}}
        dict["{{name}}"] = self.{{name}}{{^unwrapRequired}}?{{/unwrapRequired}}{{#unwrapRequired}}{{^required}}?{{/required}}{{/unwrapRequired}}.toJson(){{/isContainer}}{{/vars}}

        return APIHelper.rejectNil(dict) ?? [:]
    }

    static func fromJson(json: AnyObject) -> {{classname}} {
        return JsonDeserializers.deserialize(type: {{classname}}.self, source: json)
    }
}{{/model}}
{{/models}}
