import Alamofire

extension ParameterEncoding {

    static func encode(URLRequest: URLRequestConvertible, parameters: [String:AnyObject]?) -> (NSMutableURLRequest, NSError?) {
        let (queryParameters, body) = (parameters![Parameters.Query] as! [String:AnyObject], parameters![Parameters.Body] as! [String:AnyObject])

        var (mutableURLRequest, encodingError) = ParameterEncoding.URL.encode(URLRequest, parameters: queryParameters)

        if body.count > 0 {
            do {
                let data = try NSJSONSerialization.dataWithJSONObject(body, options: NSJSONWritingOptions())

                let contentType = mutableURLRequest.valueForHTTPHeaderField("Content-Type")

                if contentType == nil || contentType != "application/json" {
                    mutableURLRequest.setValue("application/json", forHTTPHeaderField: "Content-Type")
                }

                mutableURLRequest.HTTPBody = data
            } catch {
                encodingError = error as NSError
            }
        }

        return (mutableURLRequest, encodingError)
    }
}